# Copyright 2021-2022 The DADApy Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================

"""Module for testing the kNN density estimator."""

import os

import numpy as np
import pytest

from dadapy import DensityEstimation


def test_density_estimation_kNN():
    """Test the kNN density estimation operations work correctly."""
    filename = os.path.join(os.path.split(__file__)[0], "../2gaussians_in_2d.npy")

    X = np.load(filename)

    de = DensityEstimation(coordinates=X)

    de.compute_density_kNN(10)

    expected_den = np.array(
        [
            -2.8223820102207062,
            -2.94864689556357,
            -3.171576039507605,
            -4.257299575866181,
            -3.068805664447014,
            -3.6910496607436025,
            -4.428478126183087,
            -2.8913084165129668,
            -2.823117240709088,
            -4.4720705080238945,
            -2.6972599677238343,
            -3.496328551393898,
            -4.231799679095234,
            -4.595668668727829,
            -2.6366224871299,
            -3.032709938296536,
            -2.447729015380477,
            -3.705432973184251,
            -2.9998613278780573,
            -3.4349448367287785,
            -4.149865958746491,
            -3.6277860940967557,
            -3.2574227954536554,
            -3.286344146190764,
            -3.2635160896055853,
            -3.253302397275924,
            -3.1349169134442043,
            -3.2819309385650794,
            -4.044567942346488,
            -3.2635160896055853,
            -2.653548443405339,
            -2.8019917525797062,
            -3.425430016604083,
            -4.603473005723538,
            -3.7742072716082338,
            -3.9994842244277002,
            -2.7395436055982803,
            -3.1112008436530774,
            -3.183075192590608,
            -3.9671861385262916,
            -4.730400727565849,
            -4.665679300721681,
            -2.823117240709088,
            -3.7653509657421385,
            -3.496328551393898,
            -2.6052273822210754,
            -3.4987451555284985,
            -2.879199136406783,
            -3.635379385845857,
            -2.7814817412949666,
            -4.192650869900558,
            -2.9234323296609475,
            -4.3493646897572,
            -3.05180270216651,
            -3.255567298117495,
            -3.87718863693723,
            -2.7909997938862814,
            -2.7538613192428474,
            -4.464190995257851,
            -2.235369050147395,
            -4.31459611883778,
            -3.445661249679641,
            -3.9386675440207526,
            -3.615062032178111,
            -2.834741950820066,
            -2.627262191303288,
            -2.124215201587318,
            -3.267665403986073,
            -4.0591265710695055,
            -3.824482671375676,
            -3.8055310548299492,
            -2.3038347081201755,
            -3.690533658361019,
            -3.4147073006928346,
            -2.7933064243043355,
            -5.0434847500663285,
            -3.4652312969096726,
            -2.961033536182437,
            -3.1539664664836935,
            -2.62435170172883,
            -3.5105131857872163,
            -4.030899362974008,
            -2.6239151335120776,
            -3.0900468975287456,
            -2.3510355314248828,
            -3.0900468975287456,
            -2.2557676615700286,
            -4.123245649006998,
            -2.8893733448273977,
            -3.7378171951023997,
            -2.2609813482641563,
            -3.4693641398552857,
            -4.226705021280646,
            -3.0195753433514096,
            -2.66185215897364,
            -4.019096317125133,
            -2.6153585007677163,
            -2.2557676615700286,
            -2.568424572727362,
            -3.3341730852191462,
        ]
    )

    assert de.log_den == pytest.approx(expected_den, abs=1e-6)
